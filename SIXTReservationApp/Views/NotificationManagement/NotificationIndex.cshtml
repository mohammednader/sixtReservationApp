@model SIXTReservationApp.Models.Notification.NotificationVM
@{
    ViewData["Title"] = "Notification Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


         <div class="d-flex mb-2 mt-1 justify-content-end">
            <button class="btn btn-primary btn-md mr-0" onclick="Create()">
                <b>Add Notification</b>&nbsp;&nbsp;<i class="fas fa-plus"></i>
            </button>
        </div>
        <div class="ibox">
            <div class="ibox-head">
                <div class="ibox-title">Search</div>
                <div class="ibox-tools">
                    <a class="ibox-collapse"><i class="fa fa-minus"></i></a>
                    <a class="fullscreen-link"><i class="fa fa-expand"></i></a>
                </div>
            </div>
            <div class="ibox-body">
                <form id="searchNotification" class="form-horizontal">
                    <div class="form-group row">
                        <label class="col-4 col-form-label font-weight-bold">Reservation Status</label>
                        <label class="col-4 col-form-label font-weight-bold">Action Step</label>
                        <label class="col-4 col-form-label font-weight-bold">Job Title</label>
                    </div>
                    <div class="form-group row">
                        <div class="col-4">
                            <select id="ResStatusId" asp-for="ReservationStatusId" class="mdb-select" onchange="loadActionStep()" Searchable="Search here...">
                                <option class="default" selected>Select Reservation Status</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <select id="ActionStatusId" asp-for="ActionStep" class="mdb-select" Searchable="Search here...">
                                <option class="default" selected>Select Action Step</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <select id="jobTitlesId" asp-for="JobTitleId" class="mdb-select" Searchable="Search here..." multiple>
                                <option class="default" selected>Select Job Title</option>
                            </select>
                        </div>
                        @*<div class="col-4">
            <select asp-for="IsDisable" class="mdb-select">
                <option class="default" value="" selected disabled>None</option>
                <option class="default" value="0" >Enabled </option>
                <option class="default" value="1" >Disabled</option>

            </select>
        </div>*@
                    </div>


                    <div class="form-group row">
                        <div class="col-12">
                            <button class="btn btn-primary btn-md mr-0 float-right waves-effect waves-light" type="submit">Search</button>
                            <button type="button" id="resetBTN" onclick="clearForm(this)" class="btn btn-secondary btn-md mr-0 float-right waves-effect waves-light">
                                Cancel 
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
     <div id="DivNotification">


    </div>
 <!--Create Modal -->
<div class="modal fade" id="CreateNotificationModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="CreateNotificationModalTitle"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="col-12">

            <div id="resultCreate">

            </div>

            </div>

        </div>
    </div>
</div>
<!--Edite Modal -->

<div class="modal fade" id="editNotificationModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editNotificationModalTitle"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div id="result">

            </div>

        </div>
    </div>
</div>

<script>

    function loadReservation()
    {
         $('#ResStatusId').empty();
         $('#ResStatusId').append('<option class="default" value="" selected disabled>Select Reservation Status</option>');

        $.ajax({
            url: '@Url.Action("GetAllReservationStatus", "Common")',
            method: 'GET',
            success: response => {
                if (response && response.length) {
                    response.forEach(r => {
                        var node = $(`<option value=${r.id}>${r.status}</option>`);
                        $('#ResStatusId').append(node);
                    });
                }
            }
        });

    }

    function loadActionStep() {
        $('#ActionStatusId').empty();
        $('#ActionStatusId').append('<option class="default" value="" selected disabled>Select Action Step</option>');
        var Id = $('#ResStatusId').val();
        $.ajax({
            url: '@Url.Action("GetReservationStep", "Common")',
            method: 'GET',
            data: {Id},
            success: response => {
                if (response && response.length) {
                    response.forEach(r => {
                        var node = $(`<option value=${r.id} >${r.step}</option>`);
                        $('#ActionStatusId').append(node);
                    });
                }

            }
        });
    }

     function loadJobTitle() {
         $('#jobTitlesId').empty();
         $('#jobTitlesId').append('<option class="default" value="" selected disabled>Select Job Title</option>');

        $.ajax({
            url: '@Url.Action("GetAllJobTitles", "Common")',
            method: 'GET',
            success: response => {
                if (response && response.length) {
                    response.forEach(r => {
                        var node = $(`<option value=${r.id} >${r.name}</option>`);
                        $('#jobTitlesId').append(node);
                    });
                }

            }
        });
    }
    function loadNotification(e) {
        $('#CreateNotificationModal').modal('hide'); $('#editNotificationModal').modal('hide');
        if (e) {
            e.preventDefault();
            e.returnValue = false;
        }

        var form = $('#searchNotification').serialize();

        $.ajax({
            url: '@Url.Action("_NotificationList")?' + form,
            method: 'GET',
            success: response => {
                if (response) {
                    $('#DivNotification').html(response);
                    $('#example-table').dataTable();
                }
                else {
                    Swal.fire({
                        icon: 'error',
                        text: 'Failed to load roles',
                    });
                }
            }
        });
    }



</script>

@* create*@
<script>

    function Create() {

        $.ajax({
            url: '@Url.Action("CreateNotification", "NotificationManagement")',
            type: "Get",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                $('#resultCreate').html(data);
                $('#CreateNotificationModalTitle').text("Create Notification");
                $('#CreateNotificationModalTitle').css("text-align", "center");
                $('#CreateNotificationModal').modal('show');
            },
            error: function (x) {
                alert("error" + x);
            },
        });

    }

</script>
@*edit*@
<script>

    function Edit(id) {
        $.ajax({
            url: '@Url.Action("UpdateNotification", "NotificationManagement")',
            data: { id },
            type: "Get",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                console.log(data);
                $('#result').html('');
                $('#resultCreate').html('');
                $('#result').html(data);
                // Model Binding with data 
                //$("#ReservationStatusId").val(GR_ReservationStatus);
                $('#jobTitles').val(GR_JobTitleId);
                if (GR_IsDisable == true) {
                    $('#checkDisable').prop('checked', false);
                }
                

                 $('#editNotificationModalTitle').text("Update Notification");
                $('#CreateNotification').attr('action', '@Url.Action("UpdateNotification")');
                 $('#btnSubmit').html('Update');
                 $('#btnSubmit').removeClass("btn-primary");
                 $('#btnSubmit').addClass("btn-success");
                 $('#editNotificationModal').modal('show');

            },
            error: function (x) {
                alert("error" + x);
            },
        });
    }

</script>
@*Delete*@
<script>
     async function Delete(id) {
        var confirm = await Swal.fire({
            icon: 'question',
            text: 'Are you sure you want to delete this notification setting?',
            showCancelButton: true,
        });
        if (confirm && confirm.value) {
            $.ajax({
                url: '@Url.Action("DeleteNotification")/' + id,
                method: 'Post',
                success: response => {
                    if (response && response.success) {
                        Swal.fire({
                            icon: 'success',
                            text: response.message,
                        });
                        loadNotification();
                    } else {
                        Swal.fire({
                            icon: 'error',
                            text: (response && response.message) ? response.message : 'Failed',
                        });
                    }
                }
            });
        }
    }

</script>
<script>
    $(() => {
        loadNotification();
        loadJobTitle();
        loadReservation();
        $('#searchNotification').on('submit', loadNotification);

    })
    function clearForm(e) {
        $('#searchNotification')[0].reset();
        $('.default').prop('selected', true);
        $('#ActionStatusId').empty();
        loadNotification();
    }

</script>





